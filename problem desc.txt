Podczas laboratorium należy zbudować mały rozproszony system wykorzystując technologię RMI. W skład tego systemu mają wejść instancje klas uruchamiane równolegle (na jednym lub na kilku różnych komputerach). System powinien umożliwić zasymulowanie działania klubów poszukiwaczy skarbów. Jego architekturę przedstawiono na rysunku poniżej.updated treasure schema

Specyfikacja problemu:

    W systemie wykorzystywany będzie następujący model danych:
        Map - Mapa, reprezentowana przez kwadrat składający się z 64 (8x8) sektorów oznaczonych jak pola na szachownicy (dolny lewy to sektor A1, prawy górny to sektor H8). Każdy sektor to kwadrat składający się ze 100 (10x10) pól oznaczonych podobnie jak sektory (dolne lewe to pole A1, górne prawe to pole J10). Na polach sektorów Mapy mogą pojawić się Artefakty. Sektory mogą być przeszykiwane przez członków Klubów, przy czym na ich przeszukiwanie Klub powinien mieć aktywne zezwolenie.
        Artifact - klasa reprezentująca Artefakt mogący pojawić się na Mapie. Artefakt może być Skarbem, Rupieciem lub Pustką. Wydobycie artefaktu zajmuje jakiś czas (ma ty być zasymulowane poprzez uśpienie wątku na czas określony w przekazanych danych).
        Trasure - Skarb, coś wartościowego, podlegającego kategoryzacji.
        Junk - Rupieć, coś bezwartościowego, podlegającego kategoryzacji.
        Blank - Pustka.
    Elementami systemu będą:
        OfficeApp - aplikacja reprezentująca urząd wydający pozwolenia na prowadzenie prac poszukiwawczych oraz monitorujący wyniki tych prac. Implementuje interfejs zdalny IOffice. Dostarcza graficzny interfejs, na którym widać Mapę z zakresem prowadzonych prac i ich wynikami (na odpowiednich polach pokazywane mają być znalezione Skarby oraz aktualnie zajmowane sektory przez Kluby). Sposób prezentacji informacji na tym interfejsie jest dowolny. Na przykład każdemu klubowi można przypisać inny kolor czcionki, a potem symbolami literowymi oznaczać raportowane wyniki poszukiwań. W systemie będzie istnieć tylko jedna instancja OfficeApp.
        ClubApp - aplikacja reprezentująca Klub zrzeszający poszukiwaczy. Implementuje interfejs zdalny IClub. Dostarcza graficzny interfejs, na którym widać stan prac prowadzony przez należących do klubu Poszukiwaczy w aktualnie obsługiwanych sektorach (pokazywane mają być wszystkie artefakty znalezione przez poszukiwaczy danego klubu wraz z położeniem tych poszukiwaczy oraz zaznaczeniem aktywnych sektorów przypisanych Klubowi).
        Klub powinien wiedzieć, gdzie działa rejestr RMI z zarejestrowaną namiastką Urzędu. Korzysta z tej namiastki, by zarejestrować się w Urzędzie. Korzystając z namiastki urzędu Klub występuje również o pozwolenie na prowadzenie prac poszukiwawczych w danym sektorze. Każdy klub może prowadzić równolegle prace w co najwyżej dwóch sektorach. Klub, z zadaną częstością, raportuje wyniki poszukiwań do Urzędu (wyniki te wcześniej muszą być zaraportowane w Klubie przez poszukiwaczy, przy czym poszukiwacze raportują klubowi wszystkie znaleziska, zaś klub raportuje urzędowi tylko znalezione Skarby), jak również sygnalizuje Urzędowi zakończenie poszukiwań w danym sektorze. W systemie może istnieć kilka instancji ClubApp.
        SeekerApp - aplikacja reprezentująca Poszukiwacza, który po zarejestrowaniu się w klubie może prowadzić prace w ramach pozwolenia wydanego klubowi. Implementuje interfejs zdalny ISeeker. Poszukiwacz powinien wiedzieć, gdzie działa rejestr RMI z zarejestrowaną namiastką Urzędu. Korzysta z tej namiastki, by pozyskać listę namiastek klubów i ostatecznie do któregoś z tych klubów się zapisać/wypisać. Poszukiwacz musi wiedzieć również, gdzie działa rejestr RMI z zarejestrowaną namiastką Świata, by ją pobrać i z niej korzystać.
        Poszukiwacz dostaje zlecenia z Klubu na eksplorację danego pola w danym sektorze. Eksploracja następuje poprzez komunikację ze Światem. W systemie może istnieć wiele instancji SeekerApp .
        WorldApp - aplikacja reprezentująca fizyczny Świat. Implementuje interfejs IWorld. Posiada własną Mapę, którą można skonfigurować, tj. umieścić na jej polach jakieś artefakty. Sposób konfiguracji jest dowolny - można Mapę wczytywać w pliku tekstowego (edytowanego jakimś edytorem tekstów), można też dostarczyć graficzny interfejs (pozwalający na edycję mapy w aplikacji). Pod tym względem pozostawiona jest dowolność. Mapa z biegiem czasu będzie podlegać zmianom (znikać z niej będą Artefakty odnajdowane przez Poszukiwaczy). Aktualna mapa powinna być wizualizowana na interfejsie graficznym (tutaj mają być prezentowane tylko artefakty jeszcze nieodkryte, bez Poszukiwaczy ani sektorów zajętych przez Kluby). W systemie istnieje tylko jedna instancja WorldApp.

W trakcie implementacji należy wykorzystać skompilowane klasy z dostarczonego modułu treasures.jar. Proszę zajrzeć do kodu źródłowego, który również jest zamieszczony w module, by poznać detale klas.

Pozostałe szczegóły mają być zgodne z ustaleniami poczynionymi na początku zajęć.